#!/usr/bin/env python3
"""
Teste r√°pido das configura√ß√µes do RoboWordpress
"""

import os
import sys

# Importar configura√ß√µes
from config import WP_URL, WP_USER, WP_PASSWORD, OPENAI_API_KEY, GOOGLE_SHEET_NAME, GOOGLE_SHEET_ID, validar_configuracoes

def testar_configuracoes():
    """Testa se as configura√ß√µes est√£o sendo carregadas corretamente"""
    print("üîß Testando configura√ß√µes do RoboWordpress...")
    print("=" * 50)
    
    try:
        print("üìã Configura√ß√µes carregadas:")
        print(f"‚úÖ WP_URL: {WP_URL}")
        print(f"‚úÖ WP_USER: {WP_USER}")
        print(f"‚úÖ WP_PASSWORD: {'*' * len(WP_PASSWORD) if WP_PASSWORD else 'N√ÉO DEFINIDA'}")
        print(f"‚úÖ OPENAI_API_KEY: {OPENAI_API_KEY[:20]}..." if OPENAI_API_KEY else "‚ùå N√ÉO DEFINIDA")
        print(f"‚úÖ GOOGLE_SHEET_NAME: {GOOGLE_SHEET_NAME}")
        print(f"‚úÖ GOOGLE_SHEET_ID: {GOOGLE_SHEET_ID[:15]}..." if GOOGLE_SHEET_ID else "‚ùå N√ÉO DEFINIDA")
        
        print("\nüß™ Testando valida√ß√£o...")
        if validar_configuracoes():
            print("‚úÖ TODAS AS CONFIGURA√á√ïES EST√ÉO OK!")
            return True
        else:
            print("‚ùå ALGUMAS CONFIGURA√á√ïES EST√ÉO FALTANDO")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao carregar configura√ß√µes: {e}")
        return False

def testar_arquivos():
    """Verifica se arquivos necess√°rios existem"""
    print("\nüìÅ Verificando arquivos...")
    
    arquivos = [
        'config.py',
        'prompt_manager.py', 
        'prompts.json',
        'app.py'
    ]
    
    todos_ok = True
    for arquivo in arquivos:
        if os.path.exists(arquivo):
            print(f"‚úÖ {arquivo}")
        else:
            print(f"‚ùå {arquivo} - FALTANDO!")
            todos_ok = False
    
    # Verificar credenciais Google (opcional)
    if os.path.exists('credenciais_google.json'):
        print("‚úÖ credenciais_google.json")
    else:
        print("‚ö†Ô∏è  credenciais_google.json - N√£o encontrado (pode estar nos secrets)")
    
    return todos_ok

if __name__ == "__main__":
    print("ü§ñ RoboWordpress - Teste de Configura√ß√µes")
    print("=" * 50)
    
    # Testar arquivos
    arquivos_ok = testar_arquivos()
    
    # Testar configura√ß√µes
    config_ok = testar_configuracoes()
    
    print("\n" + "=" * 50)
    print("üìä RESULTADO FINAL:")
    
    if arquivos_ok and config_ok:
        print("‚úÖ TUDO OK! O RoboWordpress est√° pronto para usar!")
        print("\nüöÄ Para usar:")
        print("  - Interface web: streamlit run app.py")
        print("  - Rob√¥ personalizado: python robo_pilloto_v3.py")
    else:
        print("‚ùå PROBLEMAS ENCONTRADOS!")
        print("üìã Verifique os erros acima e configure as credenciais")
        
        if not config_ok:
            print("\nüí° Como configurar:")
            print("  - Local: edite o arquivo .env")
            print("  - Streamlit Cloud: configure na se√ß√£o Secrets")
